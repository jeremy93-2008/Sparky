{"version":3,"file":"sparky.js","sources":["../node_modules/nanoid/non-secure/index.js","../node_modules/mdn-polyfills/Array.from.js","../node_modules/mdn-polyfills/Array.prototype.find.js","../src/sparky.dom.ts","../src/polyfill/isConnected.ts","../src/sparky.eventmanager.ts","../node_modules/mdn-polyfills/String.prototype.startsWith.js","../src/sparky.component.ts","../src/sparky.event.ts","../src/sparky.ts","../node_modules/requestidlecallback-polyfill/index.js","../src/sparky.function.ts","../src/sparky.helper.ts","../src/sparky.ts"],"sourcesContent":["// This alphabet uses a-z A-Z 0-9 _- symbols.\n// Symbols are generated for smaller size.\n// -_zyxwvutsrqponmlkjihgfedcba9876543210ZYXWVUTSRQPONMLKJIHGFEDCBA\nvar url = '-_'\n// Loop from 36 to 0 (from z to a and 9 to 0 in Base36).\nvar i = 36\nwhile (i--) {\n  // 36 is radix. Number.prototype.toString(36) returns number\n  // in Base36 representation. Base36 is like hex, but it uses 0â€“9 and a-z.\n  url += i.toString(36)\n}\n// Loop from 36 to 10 (from Z to A in Base36).\ni = 36\nwhile (i-- - 10) {\n  url += i.toString(36).toUpperCase()\n}\n\n/**\n * Generate URL-friendly unique ID. This method use non-secure predictable\n * random generator with bigger collision probability.\n *\n * @param {number} [size=21] The number of symbols in ID.\n *\n * @return {string} Random string.\n *\n * @example\n * const nanoid = require('nanoid/non-secure')\n * model.id = nanoid() //=> \"Uakgb_J5m9g-0JDMbcJqL\"\n *\n * @name nonSecure\n * @function\n */\nmodule.exports = function (size) {\n  var id = ''\n  i = size || 21\n  // Compact alternative for `for (var i = 0; i < size; i++)`\n  while (i--) {\n    // `| 0` is compact and faster alternative for `Math.floor()`\n    id += url[Math.random() * 64 | 0]\n  }\n  return id\n}\n","!function(){var t,u,e,c;Array.from||(Array.from=(t=Object.prototype.toString,u=function(r){return\"function\"==typeof r||\"[object Function]\"===t.call(r)},e=Math.pow(2,53)-1,c=function(r){var t,n=(t=Number(r),isNaN(t)?0:0!==t&&isFinite(t)?(0<t?1:-1)*Math.floor(Math.abs(t)):t);return Math.min(Math.max(n,0),e)},function(r){var t=Object(r);if(null==r)throw new TypeError(\"Array.from requires an array-like object - not null or undefined\");var n,e=1<arguments.length?arguments[1]:void 0;if(void 0!==e){if(!u(e))throw new TypeError(\"Array.from: when provided, the second argument must be a function\");2<arguments.length&&(n=arguments[2])}for(var o,a=c(t.length),i=u(this)?Object(new this(a)):new Array(a),f=0;f<a;)o=t[f],i[f]=e?void 0===n?e(o,f):e.call(n,o,f):o,f+=1;return i.length=a,i}))}();\n","Array.prototype.find||(Array.prototype.find=function(r){if(null==this)throw new TypeError(\"Array.prototype.find called on null or undefined\");if(\"function\"!=typeof r)throw new TypeError(\"predicate must be a function\");for(var t=Object(this),n=t.length>>>0,o=arguments[1],e=void 0,i=0;i<n;i++)if(e=t[i],r.call(o,e,i,t))return e});\n","let currentDom: HTMLElement = null;\r\n\r\nexport function getCurrentDom() {\r\n    return currentDom;\r\n}\r\n\r\nexport function setCurrentDom(dom: HTMLElement) {\r\n    currentDom = dom;\r\n}\r\n\r\nexport function reconciliate(currentDom: HTMLElement, newDom: HTMLElement) {\r\n    if (!currentDom && !newDom) return null;\r\n    if (currentDom && !newDom) return null;\r\n    if (!currentDom && newDom) return newDom;\r\n\r\n    const currentDomQueue = [currentDom];\r\n    let newDomQueue = [newDom];\r\n\r\n    let currentDomToAttach = currentDom;\r\n\r\n    while (currentDomQueue.length > 0 || newDomQueue.length > 0) {\r\n        let dom = currentDomQueue.shift();\r\n        let nextDom = newDomQueue.shift();\r\n\r\n        if (dom && !nextDom) {\r\n            dom.parentElement.removeChild(dom);\r\n            continue;\r\n        }\r\n\r\n        if (!dom && nextDom) {\r\n            currentDomToAttach.appendChild(nextDom);\r\n            continue;\r\n        }\r\n\r\n        if(dom.isEqualNode(nextDom)) continue;\r\n\r\n        if (dom.nodeName !== nextDom.nodeName) {\r\n            dom.parentElement.replaceChild(nextDom, dom);\r\n        }\r\n\r\n        if(dom.nodeName == \"#text\" && nextDom.nodeName != \"#text\") {\r\n            currentDomToAttach.removeChild(dom);\r\n            currentDomToAttach.appendChild(nextDom);\r\n            continue;\r\n        }\r\n\r\n        if ((dom.nodeName == \"#text\" && nextDom.nodeName == \"#text\") \r\n        || (nextDom.childNodes.length == 1 && nextDom.childNodes[0].nodeName == \"#text\")) {\r\n            if (dom.textContent !== nextDom.textContent)\r\n                dom.textContent = nextDom.textContent\r\n        }   \r\n\r\n        setAttributes(dom, nextDom);\r\n\r\n        currentDomToAttach = pushChildNodes(dom, currentDomToAttach, currentDomQueue, nextDom, newDomQueue);\r\n    }\r\n\r\n    return currentDom;\r\n}\r\n\r\nfunction pushChildNodes(dom: HTMLElement, domAttached: HTMLElement, \r\n    domStack: HTMLElement[], nextDom: HTMLElement, newDomStack: HTMLElement[]) {\r\n\r\n    if (dom.childNodes.length > 0) {\r\n        domAttached = populateChildren(dom, domAttached, dom, domStack);\r\n    }\r\n    if (nextDom.childNodes.length > 0) {\r\n        domAttached = populateChildren(dom, domAttached, nextDom, newDomStack);\r\n    }\r\n    return domAttached;\r\n}\r\n\r\nfunction populateChildren(connectDom: HTMLElement, domAttached: HTMLElement, walkDom: HTMLElement, domStack: HTMLElement[]) {\r\n    if (connectDom)\r\n        domAttached = connectDom;\r\n    Array.from(walkDom.childNodes).forEach((child: HTMLElement) => {\r\n        if (connectDom.childNodes.length == 1 && connectDom.childNodes[0].nodeName == \"#text\")\r\n            return;\r\n        domStack.push(child);\r\n    });\r\n    return domAttached;\r\n}\r\n\r\nfunction setAttributes(currentDom: HTMLElement, nextDom: HTMLElement) {\r\n    const currentAttributesList = currentDom && currentDom.attributes\r\n        ? transformAttributesToSortedArray(currentDom.attributes) : [];\r\n\r\n    const nextAttributesList = nextDom && nextDom.attributes\r\n        ? transformAttributesToSortedArray(nextDom.attributes) : [];\r\n\r\n    while(nextAttributesList.length > 0) {\r\n        const currentAttr = currentAttributesList.shift();\r\n        const nextAttr = nextAttributesList.shift();\r\n\r\n        reconciliateAttributes(currentAttr, nextAttr, currentDom);\r\n\r\n        if(!currentDom || !nextAttr) continue;\r\n\r\n        editAttributes(currentAttr, nextAttr, currentDom);\r\n    }\r\n    \r\n    if(currentAttributesList.length > 0) {\r\n        removeUnusedAttribute(currentAttributesList, currentDom);\r\n    }\r\n}\r\n\r\nfunction editAttributes(currentAttr: Attr, nextAttr: Attr, currentDom: HTMLElement) {\r\n    if (currentAttr.name != nextAttr.name) {\r\n        currentDom.removeAttribute(currentAttr.name);\r\n        currentDom.setAttribute(nextAttr.name, nextAttr.value);\r\n    }\r\n    if (currentAttr.value != nextAttr.value) {\r\n        currentDom.getAttributeNode(nextAttr.name).value = nextAttr.value;\r\n    }\r\n}\r\n\r\nfunction reconciliateAttributes(currentAttr: Attr, nextAttr: Attr, currentDom: HTMLElement) {\r\n    if (currentAttr && !nextAttr) {\r\n        currentDom.removeAttribute(currentAttr.name);\r\n    }\r\n    if (!currentAttr && nextAttr) {\r\n        currentDom.setAttribute(nextAttr.name, nextAttr.value);\r\n    }\r\n}\r\n\r\nfunction removeUnusedAttribute(currentAttributesList: Attr[], currentDom: HTMLElement) {\r\n    currentAttributesList.forEach(attr => currentDom.attributes.removeNamedItem(attr.name));\r\n}\r\n\r\nfunction transformAttributesToSortedArray(arrayLike: ArrayLike<Attr>) {\r\n    return Array.from(arrayLike).sort((a: Attr, b: Attr) => {\r\n        return a.name.localeCompare(b.name);\r\n    })\r\n}","/*\r\n * Node.isConnected polyfill for IE and EdgeHTML\r\n * 2020-02-04\r\n *\r\n * By Eli Grey, https://eligrey.com\r\n * Public domain.\r\n * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\r\n */\r\nexport function isConnectedPolyfill() {\r\n    if (!('isConnected' in Node.prototype)) {\r\n        Object.defineProperty(Node.prototype, 'isConnected', {\r\n        get() {\r\n            return (\r\n            !this.ownerDocument ||\r\n            !(\r\n                this.ownerDocument.compareDocumentPosition(this) &\r\n                this.DOCUMENT_POSITION_DISCONNECTED\r\n            )\r\n            );\r\n        },\r\n        });\r\n    }    \r\n}\r\n","import { isConnectedPolyfill } from \"./polyfill/isConnected\"\r\n\r\nisConnectedPolyfill();\r\n\r\ninterface eventListSingle {\r\n    dom: HTMLElement;\r\n    type: string;\r\n    callbackFn: eventCallbackFn;\r\n}\r\n\r\ntype eventCallbackFn = (evt: Event) => void;\r\n\r\nexport class EventManager {\r\n    static oldEventType: string[] = [];\r\n    static eventList: eventListSingle[] = [];\r\n    static eventListType: string[] = [];\r\n\r\n    static listen() {\r\n        EventManager.removeUnusedEvents();\r\n        this.eventList.forEach((event) => {\r\n            const { type } = event;\r\n            if(!this.isEventTypeListening(type)) {\r\n                document.addEventListener(type, (event) => this.dispatchEvent(event))\r\n                this.eventListType.push(type);\r\n            }\r\n        });\r\n    }\r\n\r\n    static dispatchEvent(event: Event) {\r\n        this.eventList.find((evtList) => {\r\n            if(this.isEventTarget(evtList, event)) {\r\n                if(evtList.type === event.type) {\r\n                    evtList.callbackFn(event);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    static addEvent(eventSingle: eventListSingle) {\r\n        const {dom, type, callbackFn} = eventSingle;\r\n        this.eventList.push({ dom, type, callbackFn });\r\n    }\r\n\r\n    private static removeUnusedEvents() {\r\n        this.eventList = this.eventList\r\n            .filter((evt) => evt.dom.isConnected);\r\n    }\r\n\r\n    private static isEventTypeListening(type: string) {\r\n        return this.eventListType.find(t => t == type);\r\n    }\r\n\r\n    private static isEventTarget(evtList: eventListSingle, event: Event) {\r\n        return (evtList.dom === event.target) || evtList.dom.contains(event.target as HTMLElement);\r\n    }\r\n}","String.prototype.startsWith||(String.prototype.startsWith=function(t,r){return r=r||0,this.substr(r,t.length)===t});\n","import { IRenderReturn, ISparkyComponent } from \"./sparky\";\r\nimport { findEvent } from \"./sparky.event\";\r\nimport { EventManager } from \"./sparky.eventmanager\";\r\n\r\ninterface ICachedComponent {\r\n    component: ISparkyComponent,\r\n    dom: HTMLElement\r\n}\r\n\r\nexport class SparkyComponent {\r\n    private static cachedComponent: ICachedComponent[][] = [];\r\n    static populate(render: IRenderReturn, rootComponent: ISparkyComponent) {\r\n        \r\n        const renderQueue = [render];\r\n\r\n        let depthHorizontal = 0;\r\n\r\n        while (renderQueue.length > 0) {\r\n            const currentRender = renderQueue.shift();\r\n            if(!this.cachedComponent[depthHorizontal]) this.cachedComponent[depthHorizontal] = [];\r\n\r\n            currentRender.func.forEach((currentFunc, index) => {\r\n                const currentEvent = findEvent(render.dom, currentRender.renderId, index);\r\n                const eventName = currentEvent.attr.name.replace(\"on\", \"\");\r\n                EventManager.addEvent({\r\n                    dom: currentEvent.dom,\r\n                    type: eventName,\r\n                    callbackFn: currentFunc.func.bind(window, event)\r\n                })\r\n                currentEvent.dom.removeAttribute(currentEvent.attr.name)\r\n            })\r\n\r\n            currentRender.children.forEach((currentChild) => {\r\n                renderQueue.push(currentChild)\r\n            })\r\n\r\n            currentRender.nestedComponents.forEach((currentComp, index) => {\r\n                if(currentComp.type !== \"SparkyComponent\") return;\r\n                const cached = this.cachedComponent[depthHorizontal][index];\r\n                const commentDom = this.findComment(render.dom, currentRender.renderId, index, currentComp.selfFn.name);\r\n                if(cached) {\r\n                    cached.component.self.props = currentComp.self.props;\r\n                    currentComp = cached.component;\r\n                }\r\n                const renderChild = currentComp.selfFn(currentComp.self, Object.freeze(currentComp.self.props));\r\n                if(!commentDom) return;\r\n                commentDom.parentNode.replaceChild(renderChild.dom, commentDom);\r\n                currentComp.self.__root = rootComponent;\r\n                render.func.push(...renderChild.func);\r\n                renderQueue.push(renderChild);\r\n\r\n                this.cachedComponent[depthHorizontal].push({\r\n                    component: currentComp,\r\n                    dom: renderChild.dom\r\n                })\r\n            });\r\n            depthHorizontal++;\r\n        }\r\n\r\n        return render.dom;\r\n    }\r\n\r\n    private static findComment(element: HTMLElement, renderId: string, i: number, componentName: string) {\r\n        const domQueue = [element];\r\n        while(domQueue.length > 0) {\r\n            const elem = domQueue.shift();\r\n            if(elem.nodeName == '#comment' && elem.nodeValue.trim() == `SparkyComponent#${componentName}#${i}#${renderId}`) {\r\n                return elem;\r\n            }\r\n\r\n            Array.from(elem.childNodes as NodeListOf<HTMLElement>).forEach((child) => {\r\n                domQueue.push(child)\r\n            })\r\n        }\r\n    }\r\n}","import 'mdn-polyfills/String.prototype.startsWith';\r\n\r\ninterface IEventReturn {\r\n    dom: HTMLElement;\r\n    attr: Attr;\r\n}\r\n\r\nexport function findEvent(element: HTMLElement, renderId: string, index: number) : IEventReturn {\r\n    const domQueue = [element];\r\n    while(domQueue.length > 0) {\r\n        const elem = domQueue.shift();\r\n        const eventAttr = Array.from(elem.attributes).find((attr) => {\r\n            if(attr.name.startsWith(\"on\")) {\r\n                return attr.value == `SparkyFunction#${renderId}#${index}`;\r\n            }\r\n        })\r\n\r\n        if(eventAttr) return {dom: elem, attr: eventAttr};\r\n        \r\n        Array.from(elem.children as HTMLCollectionOf<HTMLElement>).forEach((child) => {\r\n            domQueue.push(child)\r\n        })\r\n    }\r\n}","import nanoid from \"nanoid/non-secure\";\r\n\r\nimport 'mdn-polyfills/Array.from';\r\nimport 'mdn-polyfills/Array.prototype.find';\r\n\r\nimport { SparkyFunction } from \"./sparky.function\";\r\nimport { reconciliate, getCurrentDom, setCurrentDom } from \"./sparky.dom\";\r\nimport { EventManager } from \"./sparky.eventmanager\";\r\nimport { SparkyComponent } from \"./sparky.component\";\r\n\r\nimport { isConnectedPolyfill } from \"./polyfill/isConnected\"\r\n\r\nisConnectedPolyfill();\r\n\r\nexport interface IRenderReturn extends IReconciliateProps {\r\n    type: string;\r\n    nestedComponents: ISparkyComponent[];\r\n    children: IRenderReturn[];\r\n    renderId: string;\r\n}\r\n\r\nexport interface IReconciliateProps {\r\n    dom: HTMLElement,\r\n    func: ISparkyEventFunc[],\r\n}\r\n\r\nexport type ISelfFunction = (self: SparkyFunction, props?: any) => IRenderReturn;\r\n\r\nexport interface ISparkyEventFunc {\r\n    renderId: string;\r\n    index: number;\r\n    func: Function;\r\n}\r\n\r\nexport interface ISparkyComponent {\r\n    type: string;\r\n    self: SparkyFunction;\r\n    selfFn: ISelfFunction;\r\n}\r\n\r\nexport interface ISparkyProps {\r\n    [key: string]: any;\r\n}\r\n\r\nexport type ISparkyState = ISparkyProps;\r\n\r\nexport class Sparky {\r\n    public static _DEV_: boolean = true;\r\n\r\n    /**\r\n     * Generate a Sparky Component that can be mount.\r\n     * @param renderFunc The function that going to be execute to render html template\r\n     */\r\n    static component(renderFunc: ISelfFunction, props?: ISparkyProps) {\r\n        const thisFunction = new SparkyFunction(renderFunc, props);\r\n        return { type: \"SparkyComponent\", self: thisFunction, selfFn: renderFunc } as ISparkyComponent;\r\n    }\r\n\r\n    /**\r\n     * Mount a Sparky Component in the DOM Tree and keep it updated.\r\n     * @param component Sparky Component\r\n     * @param dom The dom element where you want to mount this component\r\n     */\r\n    static mount(component: ISparkyComponent, dom?: HTMLElement) {\r\n        if(Sparky._DEV_)\r\n            console.time();\r\n        \r\n        const { self, selfFn } = component;\r\n        const render = selfFn.call(window, self, Object.freeze(self.props)) as IRenderReturn;\r\n\r\n        render.dom = SparkyComponent.populate(render, component);\r\n\r\n        let finalDOM = reconciliate(getCurrentDom(), render.dom);           \r\n        if (!finalDOM) return;\r\n        if (!finalDOM.isConnected && dom)\r\n            dom.appendChild(finalDOM);\r\n        EventManager.listen();\r\n        \r\n        setCurrentDom(finalDOM as HTMLElement);\r\n        \r\n        if(Sparky._DEV_)\r\n            console.timeEnd();\r\n    }\r\n\r\n    /**\r\n     * Reconciliate the current DOM with the new DOM Node\r\n     * @param oldNode Node that need to be reconcile\r\n     * @param newNode Node that have the new elements\r\n     */\r\n    static reconciliate(oldNode: HTMLElement, newNode: HTMLElement) {\r\n        return reconciliate(oldNode, newNode)\r\n    }\r\n}\r\n\r\n/**\r\n * Render the html string template to HTML elements\r\n * @param html Array of HTML String \r\n * @param computedProps Computed Props used to pass Javascript into template\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\r\n */\r\nexport function render(html: TemplateStringsArray | string, ...computedProps: any[]): IRenderReturn {\r\n    const domNode = document.createElement(\"div\");\r\n    const func: ISparkyEventFunc[] = [];\r\n    const nestedComponents: ISparkyComponent[] = [];\r\n    const children: IRenderReturn[] = [];\r\n    const renderId = nanoid(12);\r\n\r\n    const newHTML = (typeof html == \"string\") ? html\r\n        : html.map((stringHTML, i) => {\r\n            let htmlLine = \"\"\r\n            htmlLine += stringHTML\r\n            if(!computedProps[i]) return htmlLine;\r\n            htmlLine = getComputedValue(computedProps, i, func, htmlLine, nestedComponents, children, renderId);\r\n            return htmlLine;\r\n        })\r\n        \r\n    domNode.innerHTML = Array.isArray(newHTML) ? newHTML.join(\"\") : newHTML;\r\n\r\n    if(domNode.children.length > 1) {\r\n        throw new TypeError(\"The render HTML can only had one root node\");\r\n    }\r\n\r\n    return { type: \"SparkyRender\", dom: domNode.firstElementChild as HTMLElement, func, nestedComponents, children, renderId };\r\n}\r\n\r\nfunction getComputedValue(computedProps: any[], i: number, func: ISparkyEventFunc[], htmlLine: string, nestedComponents: ISparkyComponent[], children: IRenderReturn[], renderId: string) {\r\n    if (typeof computedProps[i] == \"function\") {\r\n        func.push({index: func.length - 1, renderId, func: computedProps[i]});\r\n        htmlLine += `'SparkyFunction#${renderId}#${func.length - 1}'`;\r\n    }\r\n    else if (computedProps[i].type == \"SparkyRender\") {\r\n        const render = computedProps[i] as IRenderReturn;\r\n        htmlLine = renderSparkyObject(render, htmlLine);\r\n        children.push(render)\r\n    }\r\n    else if (computedProps[i].type == \"SparkyComponent\") {\r\n        const comp = computedProps[i] as ISparkyComponent;\r\n        htmlLine += `<!-- SparkyComponent#${comp.selfFn.name}#${nestedComponents.length}#${renderId} -->`;\r\n        nestedComponents.push(comp);\r\n    }\r\n    else {\r\n        computedProps[i] = new String(computedProps[i]);\r\n        if ((computedProps[i] as string).startsWith(\"<\"))\r\n            htmlLine += computedProps[i];\r\n        else\r\n            htmlLine += `<span class='computed'>${computedProps[i]}</span>`;\r\n    }\r\n    return htmlLine;\r\n}\r\n\r\nfunction renderSparkyObject(render: IRenderReturn, htmlLine: string) {\r\n    const div = document.createElement(\"div\");\r\n    div.appendChild(render.dom);\r\n    htmlLine += div.innerHTML;\r\n    return htmlLine;\r\n}\r\n","window.requestIdleCallback =\n    window.requestIdleCallback ||\n    function(cb) {\n        var start = Date.now();\n        return setTimeout(function() {\n            cb({\n                didTimeout: false,\n                timeRemaining: function() {\n                    return Math.max(0, 50 - (Date.now() - start));\n                },\n            });\n        }, 1);\n    };\n\nwindow.cancelIdleCallback =\n    window.cancelIdleCallback ||\n    function(id) {\n        clearTimeout(id);\n    };\n","import { Sparky, IRenderReturn, ISparkyComponent, ISparkyProps, ISparkyState } from \"./sparky\";\r\nimport 'requestidlecallback-polyfill';\r\nimport { arrayAreSame } from \"./sparky.helper\";\r\n\r\ntype UpdateCallback = () => void;\r\n\r\ntype DependenciesList = string[];\r\ntype ArgumentsList = any[];\r\n\r\ninterface IMemoCached {\r\n    fn: Function;\r\n    dependencies: string[];\r\n    result: any;\r\n}\r\n\r\nexport class SparkyFunction {\r\n    public __root: ISparkyComponent;\r\n    public props: ISparkyProps;\r\n    \r\n    private newProps: string[] = [];\r\n    private cachedMemo: IMemoCached[] = [];\r\n    private state: ISparkyState;\r\n    private renderFunc: (self: SparkyFunction) => IRenderReturn;\r\n\r\n    constructor(renderFunc: (self: SparkyFunction) => IRenderReturn, props: ISparkyProps) {\r\n        this.props = Object.freeze(props || {});\r\n        this.state = {};\r\n        this.renderFunc = renderFunc;\r\n        this.__root = null;\r\n    }\r\n    \r\n    /**\r\n     * Execute after the render/update of the DOM tree.\r\n     * @param callback - The function that you want to execute\r\n     * @param dependenciesChanged - An array of keys to know when the onUpdate need to be executed\r\n     */\r\n    onUpdate = (callback: UpdateCallback, dependenciesChanged?: DependenciesList) => {\r\n        if (!dependenciesChanged && this.newProps.length == 0 ||\r\n            dependenciesChanged && dependenciesChanged.length == 0 ||\r\n            this.newProps.some((props) => dependenciesChanged && dependenciesChanged.includes(props)))\r\n            //@ts-ignore\r\n            window.requestIdleCallback(() => callback.call(this))\r\n    }\r\n\r\n    /**\r\n    * Get State object value of this context\r\n    * @param props - the specific key of the value that you want to retrieve\r\n    */\r\n    getState = <S>(props: string): S => {\r\n        if (props) return this.state[props];\r\n        return this.state as S;\r\n    }\r\n\r\n    /**\r\n     * Add/Set a new value into the State object of the context\r\n     * @param newState - new Value\r\n     */\r\n    setState = <S>(newState: S) => {\r\n        this.newProps = Object.keys(newState);\r\n        this.state = { ...this.state, ...newState };\r\n        (this.__root) ? Sparky.mount(this.__root) :\r\n            Sparky.mount({ type: \"SparkyComponent\", self: this, selfFn: this.renderFunc });\r\n    }\r\n\r\n    /**\r\n     * Call the function callback only when dependencies has changed\r\n     * @param callbackFn - Callback to be called when needed\r\n     * @param argumentsChanged - list of value that are used to know if the callback needed to be recalled\r\n     */\r\n    memo = (callbackFn: Function, argumentsChanged?: ArgumentsList) => {\r\n        const memoCached = this.cachedMemo.find((memo) => callbackFn.toString() == memo.fn.toString());\r\n        const newMemo = {\r\n            fn: callbackFn,\r\n            result: null,\r\n            dependencies: argumentsChanged\r\n        };\r\n\r\n        if(!memoCached) {\r\n            newMemo.result = callbackFn.call(window, ...argumentsChanged);\r\n            this.cachedMemo.push(newMemo)\r\n            return newMemo.result;\r\n        }\r\n        \r\n        if(!arrayAreSame(memoCached.dependencies, argumentsChanged)) {\r\n            memoCached.dependencies = argumentsChanged;\r\n            return callbackFn.call(window, ...argumentsChanged)\r\n        }\r\n        \r\n        return memoCached.result;\r\n    }\r\n}","interface ISortArray {\r\n    bigArray: any[];\r\n    smallArray: any[];\r\n}\r\n\r\nexport function arrayAreSame(array1: any[], array2: any[]) {\r\n    const { bigArray, smallArray } = sortArrayInObject(array1, array2);\r\n\r\n    return bigArray.every((big, i) => {\r\n        return big == (smallArray ? smallArray[i] : null);\r\n    })\r\n}\r\n\r\nfunction sortArrayInObject(array1: any[], array2: any[]): ISortArray {\r\n    const length_1 = array1.length;\r\n    const length_2 = array2.length;\r\n\r\n    if(length_1 > length_2) return { bigArray: array1, smallArray: array2 }\r\n\r\n    return { bigArray: array2, smallArray: array1 }\r\n}","import nanoid from \"nanoid/non-secure\";\r\n\r\nimport 'mdn-polyfills/Array.from';\r\nimport 'mdn-polyfills/Array.prototype.find';\r\n\r\nimport { SparkyFunction } from \"./sparky.function\";\r\nimport { reconciliate, getCurrentDom, setCurrentDom } from \"./sparky.dom\";\r\nimport { EventManager } from \"./sparky.eventmanager\";\r\nimport { SparkyComponent } from \"./sparky.component\";\r\n\r\nimport { isConnectedPolyfill } from \"./polyfill/isConnected\"\r\n\r\nisConnectedPolyfill();\r\n\r\nexport interface IRenderReturn extends IReconciliateProps {\r\n    type: string;\r\n    nestedComponents: ISparkyComponent[];\r\n    children: IRenderReturn[];\r\n    renderId: string;\r\n}\r\n\r\nexport interface IReconciliateProps {\r\n    dom: HTMLElement,\r\n    func: ISparkyEventFunc[],\r\n}\r\n\r\nexport type ISelfFunction = (self: SparkyFunction, props?: any) => IRenderReturn;\r\n\r\nexport interface ISparkyEventFunc {\r\n    renderId: string;\r\n    index: number;\r\n    func: Function;\r\n}\r\n\r\nexport interface ISparkyComponent {\r\n    type: string;\r\n    self: SparkyFunction;\r\n    selfFn: ISelfFunction;\r\n}\r\n\r\nexport interface ISparkyProps {\r\n    [key: string]: any;\r\n}\r\n\r\nexport type ISparkyState = ISparkyProps;\r\n\r\nexport class Sparky {\r\n    public static _DEV_: boolean = true;\r\n\r\n    /**\r\n     * Generate a Sparky Component that can be mount.\r\n     * @param renderFunc The function that going to be execute to render html template\r\n     */\r\n    static component(renderFunc: ISelfFunction, props?: ISparkyProps) {\r\n        const thisFunction = new SparkyFunction(renderFunc, props);\r\n        return { type: \"SparkyComponent\", self: thisFunction, selfFn: renderFunc } as ISparkyComponent;\r\n    }\r\n\r\n    /**\r\n     * Mount a Sparky Component in the DOM Tree and keep it updated.\r\n     * @param component Sparky Component\r\n     * @param dom The dom element where you want to mount this component\r\n     */\r\n    static mount(component: ISparkyComponent, dom?: HTMLElement) {\r\n        if(Sparky._DEV_)\r\n            console.time();\r\n        \r\n        const { self, selfFn } = component;\r\n        const render = selfFn.call(window, self, Object.freeze(self.props)) as IRenderReturn;\r\n\r\n        render.dom = SparkyComponent.populate(render, component);\r\n\r\n        let finalDOM = reconciliate(getCurrentDom(), render.dom);           \r\n        if (!finalDOM) return;\r\n        if (!finalDOM.isConnected && dom)\r\n            dom.appendChild(finalDOM);\r\n        EventManager.listen();\r\n        \r\n        setCurrentDom(finalDOM as HTMLElement);\r\n        \r\n        if(Sparky._DEV_)\r\n            console.timeEnd();\r\n    }\r\n\r\n    /**\r\n     * Reconciliate the current DOM with the new DOM Node\r\n     * @param oldNode Node that need to be reconcile\r\n     * @param newNode Node that have the new elements\r\n     */\r\n    static reconciliate(oldNode: HTMLElement, newNode: HTMLElement) {\r\n        return reconciliate(oldNode, newNode)\r\n    }\r\n}\r\n\r\n/**\r\n * Render the html string template to HTML elements\r\n * @param html Array of HTML String \r\n * @param computedProps Computed Props used to pass Javascript into template\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\r\n */\r\nexport function render(html: TemplateStringsArray | string, ...computedProps: any[]): IRenderReturn {\r\n    const domNode = document.createElement(\"div\");\r\n    const func: ISparkyEventFunc[] = [];\r\n    const nestedComponents: ISparkyComponent[] = [];\r\n    const children: IRenderReturn[] = [];\r\n    const renderId = nanoid(12);\r\n\r\n    const newHTML = (typeof html == \"string\") ? html\r\n        : html.map((stringHTML, i) => {\r\n            let htmlLine = \"\"\r\n            htmlLine += stringHTML\r\n            if(!computedProps[i]) return htmlLine;\r\n            htmlLine = getComputedValue(computedProps, i, func, htmlLine, nestedComponents, children, renderId);\r\n            return htmlLine;\r\n        })\r\n        \r\n    domNode.innerHTML = Array.isArray(newHTML) ? newHTML.join(\"\") : newHTML;\r\n\r\n    if(domNode.children.length > 1) {\r\n        throw new TypeError(\"The render HTML can only had one root node\");\r\n    }\r\n\r\n    return { type: \"SparkyRender\", dom: domNode.firstElementChild as HTMLElement, func, nestedComponents, children, renderId };\r\n}\r\n\r\nfunction getComputedValue(computedProps: any[], i: number, func: ISparkyEventFunc[], htmlLine: string, nestedComponents: ISparkyComponent[], children: IRenderReturn[], renderId: string) {\r\n    if (typeof computedProps[i] == \"function\") {\r\n        func.push({index: func.length - 1, renderId, func: computedProps[i]});\r\n        htmlLine += `'SparkyFunction#${renderId}#${func.length - 1}'`;\r\n    }\r\n    else if (computedProps[i].type == \"SparkyRender\") {\r\n        const render = computedProps[i] as IRenderReturn;\r\n        htmlLine = renderSparkyObject(render, htmlLine);\r\n        children.push(render)\r\n    }\r\n    else if (computedProps[i].type == \"SparkyComponent\") {\r\n        const comp = computedProps[i] as ISparkyComponent;\r\n        htmlLine += `<!-- SparkyComponent#${comp.selfFn.name}#${nestedComponents.length}#${renderId} -->`;\r\n        nestedComponents.push(comp);\r\n    }\r\n    else {\r\n        computedProps[i] = new String(computedProps[i]);\r\n        if ((computedProps[i] as string).startsWith(\"<\"))\r\n            htmlLine += computedProps[i];\r\n        else\r\n            htmlLine += `<span class='computed'>${computedProps[i]}</span>`;\r\n    }\r\n    return htmlLine;\r\n}\r\n\r\nfunction renderSparkyObject(render: IRenderReturn, htmlLine: string) {\r\n    const div = document.createElement(\"div\");\r\n    div.appendChild(render.dom);\r\n    htmlLine += div.innerHTML;\r\n    return htmlLine;\r\n}\r\n"],"names":["url","i","toString","toUpperCase","t","u","e","c","Array","from","Object","prototype","r","call","Math","pow","n","Number","isNaN","isFinite","floor","abs","min","max","TypeError","arguments","length","o","a","this","f","find","currentDom","getCurrentDom","setCurrentDom","dom","reconciliate","newDom","currentDomQueue","newDomQueue","currentDomToAttach","shift","nextDom","isEqualNode","nodeName","parentElement","replaceChild","childNodes","textContent","setAttributes","pushChildNodes","removeChild","appendChild","domAttached","domStack","newDomStack","populateChildren","connectDom","walkDom","forEach","child","push","currentAttributesList","attributes","transformAttributesToSortedArray","nextAttributesList","currentAttr","nextAttr","reconciliateAttributes","editAttributes","attr","removeNamedItem","name","removeAttribute","setAttribute","value","getAttributeNode","arrayLike","sort","b","localeCompare","isConnectedPolyfill","Node","defineProperty","get","ownerDocument","compareDocumentPosition","DOCUMENT_POSITION_DISCONNECTED","EventManager","removeUnusedEvents","eventList","event","type","_this","isEventTypeListening","document","addEventListener","dispatchEvent","eventListType","evtList","isEventTarget","callbackFn","eventSingle","filter","evt","isConnected","target","contains","String","startsWith","substr","SparkyComponent","render","rootComponent","renderQueue","depthHorizontal","currentRender","this_1","cachedComponent","func","currentFunc","index","currentEvent","element","renderId","domQueue","elem","eventAttr","children","findEvent","eventName","replace","addEvent","bind","window","currentChild","nestedComponents","currentComp","cached","commentDom","findComment","selfFn","component","self","props","renderChild","freeze","parentNode","__root","_a","componentName","nodeValue","trim","Sparky","renderFunc","SparkyFunction","_DEV_","console","time","populate","finalDOM","listen","timeEnd","oldNode","newNode","requestIdleCallback","cb","start","Date","now","setTimeout","didTimeout","timeRemaining","cancelIdleCallback","id","clearTimeout","callback","dependenciesChanged","newProps","some","includes","state","newState","keys","mount","argumentsChanged","array1","array2","length_1","smallArray","memoCached","cachedMemo","memo","fn","newMemo","result","dependencies","bigArray","every","big","html","_i","computedProps","domNode","createElement","size","random","nanoid","newHTML","map","stringHTML","htmlLine","render_1","div","innerHTML","renderSparkyObject","comp","getComputedValue","isArray","join","firstElementChild"],"mappings":"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"}