{"version":3,"file":"sparky.js","sources":["../node_modules/nanoid/non-secure/index.js","../node_modules/mdn-polyfills/Array.from.js","../node_modules/mdn-polyfills/Array.prototype.find.js","../src/sparky.dom.ts","../src/polyfill/isConnected.ts","../src/sparky.eventmanager.ts","../node_modules/kind-of/index.js","../node_modules/is-plain-object/index.js","../node_modules/isobject/index.js","../node_modules/shallow-clone/index.js","../node_modules/clone-deep/index.js","../src/sparky.context.ts","../src/sparky.function.helper.ts","../src/sparky.helper.ts","../node_modules/requestidlecallback-polyfill/index.js","../src/sparky.function.ts","../src/sparky.ts","../node_modules/mdn-polyfills/String.prototype.startsWith.js","../src/sparky.component.ts","../src/sparky.event.ts","../src/sparky.ts"],"sourcesContent":["// This alphabet uses a-z A-Z 0-9 _- symbols.\n// Symbols are generated for smaller size.\n// -_zyxwvutsrqponmlkjihgfedcba9876543210ZYXWVUTSRQPONMLKJIHGFEDCBA\nvar url = '-_'\n// Loop from 36 to 0 (from z to a and 9 to 0 in Base36).\nvar i = 36\nwhile (i--) {\n  // 36 is radix. Number.prototype.toString(36) returns number\n  // in Base36 representation. Base36 is like hex, but it uses 0â€“9 and a-z.\n  url += i.toString(36)\n}\n// Loop from 36 to 10 (from Z to A in Base36).\ni = 36\nwhile (i-- - 10) {\n  url += i.toString(36).toUpperCase()\n}\n\n/**\n * Generate URL-friendly unique ID. This method use non-secure predictable\n * random generator with bigger collision probability.\n *\n * @param {number} [size=21] The number of symbols in ID.\n *\n * @return {string} Random string.\n *\n * @example\n * const nanoid = require('nanoid/non-secure')\n * model.id = nanoid() //=> \"Uakgb_J5m9g-0JDMbcJqL\"\n *\n * @name nonSecure\n * @function\n */\nmodule.exports = function (size) {\n  var id = ''\n  i = size || 21\n  // Compact alternative for `for (var i = 0; i < size; i++)`\n  while (i--) {\n    // `| 0` is compact and faster alternative for `Math.floor()`\n    id += url[Math.random() * 64 | 0]\n  }\n  return id\n}\n","!function(){var t,u,e,c;Array.from||(Array.from=(t=Object.prototype.toString,u=function(r){return\"function\"==typeof r||\"[object Function]\"===t.call(r)},e=Math.pow(2,53)-1,c=function(r){var t,n=(t=Number(r),isNaN(t)?0:0!==t&&isFinite(t)?(0<t?1:-1)*Math.floor(Math.abs(t)):t);return Math.min(Math.max(n,0),e)},function(r){var t=Object(r);if(null==r)throw new TypeError(\"Array.from requires an array-like object - not null or undefined\");var n,e=1<arguments.length?arguments[1]:void 0;if(void 0!==e){if(!u(e))throw new TypeError(\"Array.from: when provided, the second argument must be a function\");2<arguments.length&&(n=arguments[2])}for(var o,a=c(t.length),i=u(this)?Object(new this(a)):new Array(a),f=0;f<a;)o=t[f],i[f]=e?void 0===n?e(o,f):e.call(n,o,f):o,f+=1;return i.length=a,i}))}();\n","Array.prototype.find||(Array.prototype.find=function(r){if(null==this)throw new TypeError(\"Array.prototype.find called on null or undefined\");if(\"function\"!=typeof r)throw new TypeError(\"predicate must be a function\");for(var t=Object(this),n=t.length>>>0,o=arguments[1],e=void 0,i=0;i<n;i++)if(e=t[i],r.call(o,e,i,t))return e});\n","let currentDom: HTMLElement = null;\r\n\r\nexport function getCurrentDom() {\r\n    return currentDom;\r\n}\r\n\r\nexport function setCurrentDom(dom: HTMLElement) {\r\n    currentDom = dom;\r\n}\r\n\r\nexport function reconciliate(currentDom: HTMLElement, nextDom: HTMLElement) {\r\n    if (!nextDom) return null;\r\n    if (!currentDom && nextDom) return nextDom;\r\n    if (currentDom.isEqualNode(nextDom)) return currentDom;\r\n    if (currentDom.nodeName !== nextDom.nodeName) return nextDom;\r\n\r\n    const domQueue: [Node, Node][] = [[currentDom, nextDom]];\r\n\r\n    while(domQueue.length > 0) {\r\n        const [currentElem, nextElem] = domQueue.shift();\r\n        const removedList: Node[] = [];\r\n        reconciliateAttribute(currentElem as HTMLElement, nextElem as HTMLElement);\r\n\r\n        const nextElemChildren = nextElem.childNodes;\r\n        currentElem.childNodes.forEach((node, i) => {\r\n            const nextNode = nextElemChildren.item(i);\r\n\r\n            if(!nextNode) {\r\n                removedList.push(node)\r\n                return;\r\n            }\r\n\r\n            if(node.isEqualNode(nextNode)) return;\r\n\r\n            if(node.nodeName !== nextNode.nodeName) {\r\n                currentElem.replaceChild(nextNode.cloneNode(true), node);\r\n                return;\r\n            }\r\n\r\n            if(node.nodeName == \"#text\" && node.textContent !== nextNode.textContent) {\r\n                node.textContent = nextNode.textContent;\r\n                return;\r\n            }\r\n\r\n            domQueue.push([node, nextNode])\r\n        });\r\n\r\n        for(let i = currentElem.childNodes.length; i < nextElem.childNodes.length; i++) {\r\n            const childNode = nextElem.childNodes.item(i);\r\n            currentElem.appendChild(childNode.cloneNode(true))\r\n        }\r\n\r\n        removedList.forEach((rmElem) => {\r\n            currentElem.removeChild(rmElem)\r\n        })\r\n\r\n    }\r\n\r\n    return currentDom;\r\n}\r\n\r\nfunction reconciliateAttribute(currentElem: HTMLElement, nextElem: HTMLElement) {\r\n    if(!currentElem.attributes || !nextElem.attributes) return;\r\n\r\n    const sortedCurrentAttributes = Array.from(currentElem.attributes).sort((attr, attr2) => attributeSort(attr, attr2))\r\n    const sortedNextAttributes = Array.from(nextElem.attributes).sort((attr, attr2) => attributeSort(attr, attr2))\r\n\r\n    const removedAttr: Attr[] = [];\r\n\r\n    sortedCurrentAttributes.forEach((attr, i) => {\r\n        const nextAttr = sortedNextAttributes[i];\r\n\r\n        if(!nextAttr) {\r\n            removedAttr.push(attr);\r\n            return;\r\n        }\r\n        \r\n        if(attr.name !== nextAttr.name) {\r\n            removedAttr.push(attr);\r\n            currentElem.setAttribute(nextAttr.name, nextAttr.value);\r\n            return;\r\n        }\r\n\r\n        if(attr.value !== nextAttr.value) {\r\n            attr.value = nextAttr.value;\r\n        }\r\n    })\r\n\r\n    for(let i = sortedCurrentAttributes.length; i < sortedNextAttributes.length; i++) {\r\n        const nextAttr = sortedNextAttributes[i];\r\n        currentElem.setAttribute(nextAttr.name, nextAttr.value);\r\n    }\r\n\r\n    removedAttr.forEach(attr => currentElem.removeAttribute(attr.name))\r\n}\r\n\r\nfunction attributeSort(a: Attr, b: Attr) {\r\n    return (a.name < b.name ? -1 : (a.name > b.name ? 1 : 0));\r\n}\r\n","/*\r\n * Node.isConnected polyfill for IE and EdgeHTML\r\n * 2020-02-04\r\n *\r\n * By Eli Grey, https://eligrey.com\r\n * Public domain.\r\n * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\r\n */\r\nexport function isConnectedPolyfill() {\r\n    if (!('isConnected' in Node.prototype)) {\r\n        Object.defineProperty(Node.prototype, 'isConnected', {\r\n        get() {\r\n            return (\r\n            !this.ownerDocument ||\r\n            !(\r\n                this.ownerDocument.compareDocumentPosition(this) &\r\n                this.DOCUMENT_POSITION_DISCONNECTED\r\n            )\r\n            );\r\n        },\r\n        });\r\n    }    \r\n}\r\n","import { isConnectedPolyfill } from \"./polyfill/isConnected\"\r\nimport { ISparkySelf } from \"./sparky.context\";\r\n\r\nisConnectedPolyfill();\r\n\r\nexport interface eventListSingle {\r\n    dom: HTMLElement;\r\n    type: string;\r\n    context: ISparkySelf;\r\n    callbackFn: eventCallbackFn;\r\n}\r\n\r\nexport type eventCallbackFn = (evt: Event) => void;\r\n\r\nexport class EventManager {\r\n    static oldEventType: string[] = [];\r\n    static eventList: eventListSingle[] = [];\r\n    static eventListType: string[] = [];\r\n\r\n    static listen() {\r\n        EventManager.removeUnusedEvents();\r\n        this.eventList.forEach((event) => {\r\n            const { type } = event;\r\n            if(!this.isEventTypeListening(type)) {\r\n                document.addEventListener(type, (event) => this.dispatchEvent(event))\r\n                this.eventListType.push(type);\r\n            }\r\n        });\r\n    }\r\n\r\n    static dispatchEvent(event: Event) {\r\n        this.eventList.find((evtList) => {\r\n            if(this.isEventTarget(evtList, event)) {\r\n                if(evtList.type === event.type) {\r\n                    evtList.callbackFn(event);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    static addEvent(eventSingle: eventListSingle) {\r\n        const {dom, type, context, callbackFn} = eventSingle;\r\n        this.eventList.push({ dom, type, context, callbackFn });\r\n    }\r\n\r\n    private static removeUnusedEvents() {\r\n        this.eventList = this.eventList\r\n            .filter((evt) => evt.dom.isConnected);\r\n    }\r\n\r\n    private static isEventTypeListening(type: string) {\r\n        return this.eventListType.find(t => t == type);\r\n    }\r\n\r\n    private static isEventTarget(evtList: eventListSingle, event: Event) {\r\n        return (evtList.dom === event.target) || evtList.dom.contains(event.target as HTMLElement);\r\n    }\r\n}","var toString = Object.prototype.toString;\n\nmodule.exports = function kindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n\n  var type = typeof val;\n  if (type === 'boolean') return 'boolean';\n  if (type === 'string') return 'string';\n  if (type === 'number') return 'number';\n  if (type === 'symbol') return 'symbol';\n  if (type === 'function') {\n    return isGeneratorFn(val) ? 'generatorfunction' : 'function';\n  }\n\n  if (isArray(val)) return 'array';\n  if (isBuffer(val)) return 'buffer';\n  if (isArguments(val)) return 'arguments';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  if (isRegexp(val)) return 'regexp';\n\n  switch (ctorName(val)) {\n    case 'Symbol': return 'symbol';\n    case 'Promise': return 'promise';\n\n    // Set, Map, WeakSet, WeakMap\n    case 'WeakMap': return 'weakmap';\n    case 'WeakSet': return 'weakset';\n    case 'Map': return 'map';\n    case 'Set': return 'set';\n\n    // 8-bit typed arrays\n    case 'Int8Array': return 'int8array';\n    case 'Uint8Array': return 'uint8array';\n    case 'Uint8ClampedArray': return 'uint8clampedarray';\n\n    // 16-bit typed arrays\n    case 'Int16Array': return 'int16array';\n    case 'Uint16Array': return 'uint16array';\n\n    // 32-bit typed arrays\n    case 'Int32Array': return 'int32array';\n    case 'Uint32Array': return 'uint32array';\n    case 'Float32Array': return 'float32array';\n    case 'Float64Array': return 'float64array';\n  }\n\n  if (isGeneratorObj(val)) {\n    return 'generator';\n  }\n\n  // Non-plain objects\n  type = toString.call(val);\n  switch (type) {\n    case '[object Object]': return 'object';\n    // iterators\n    case '[object Map Iterator]': return 'mapiterator';\n    case '[object Set Iterator]': return 'setiterator';\n    case '[object String Iterator]': return 'stringiterator';\n    case '[object Array Iterator]': return 'arrayiterator';\n  }\n\n  // other\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n};\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isArray(val) {\n  if (Array.isArray) return Array.isArray(val);\n  return val instanceof Array;\n}\n\nfunction isError(val) {\n  return val instanceof Error || (typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number');\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function'\n    && typeof val.getDate === 'function'\n    && typeof val.setDate === 'function';\n}\n\nfunction isRegexp(val) {\n  if (val instanceof RegExp) return true;\n  return typeof val.flags === 'string'\n    && typeof val.ignoreCase === 'boolean'\n    && typeof val.multiline === 'boolean'\n    && typeof val.global === 'boolean';\n}\n\nfunction isGeneratorFn(name, val) {\n  return ctorName(name) === 'GeneratorFunction';\n}\n\nfunction isGeneratorObj(val) {\n  return typeof val.throw === 'function'\n    && typeof val.return === 'function'\n    && typeof val.next === 'function';\n}\n\nfunction isArguments(val) {\n  try {\n    if (typeof val.length === 'number' && typeof val.callee === 'function') {\n      return true;\n    }\n  } catch (err) {\n    if (err.message.indexOf('callee') !== -1) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * If you need to support Safari 5-7 (8-10 yr-old browser),\n * take a look at https://github.com/feross/is-buffer\n */\n\nfunction isBuffer(val) {\n  if (val.constructor && typeof val.constructor.isBuffer === 'function') {\n    return val.constructor.isBuffer(val);\n  }\n  return false;\n}\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n","/*!\n * shallow-clone <https://github.com/jonschlinkert/shallow-clone>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst valueOf = Symbol.prototype.valueOf;\nconst typeOf = require('kind-of');\n\nfunction clone(val, deep) {\n  switch (typeOf(val)) {\n    case 'array':\n      return val.slice();\n    case 'object':\n      return Object.assign({}, val);\n    case 'date':\n      return new val.constructor(Number(val));\n    case 'map':\n      return new Map(val);\n    case 'set':\n      return new Set(val);\n    case 'buffer':\n      return cloneBuffer(val);\n    case 'symbol':\n      return cloneSymbol(val);\n    case 'arraybuffer':\n      return cloneArrayBuffer(val);\n    case 'float32array':\n    case 'float64array':\n    case 'int16array':\n    case 'int32array':\n    case 'int8array':\n    case 'uint16array':\n    case 'uint32array':\n    case 'uint8clampedarray':\n    case 'uint8array':\n      return cloneTypedArray(val);\n    case 'regexp':\n      return cloneRegExp(val);\n    case 'error':\n      return Object.create(val);\n    default: {\n      return val;\n    }\n  }\n}\n\nfunction cloneRegExp(val) {\n  const flags = val.flags !== void 0 ? val.flags : (/\\w+$/.exec(val) || void 0);\n  const re = new val.constructor(val.source, flags);\n  re.lastIndex = val.lastIndex;\n  return re;\n}\n\nfunction cloneArrayBuffer(val) {\n  const res = new val.constructor(val.byteLength);\n  new Uint8Array(res).set(new Uint8Array(val));\n  return res;\n}\n\nfunction cloneTypedArray(val, deep) {\n  return new val.constructor(val.buffer, val.byteOffset, val.length);\n}\n\nfunction cloneBuffer(val) {\n  const len = val.length;\n  const buf = Buffer.allocUnsafe ? Buffer.allocUnsafe(len) : Buffer.from(len);\n  val.copy(buf);\n  return buf;\n}\n\nfunction cloneSymbol(val) {\n  return valueOf ? Object(valueOf.call(val)) : {};\n}\n\n/**\n * Expose `clone`\n */\n\nmodule.exports = clone;\n","'use strict';\n\n/**\n * Module dependenices\n */\n\nconst clone = require('shallow-clone');\nconst typeOf = require('kind-of');\nconst isPlainObject = require('is-plain-object');\n\nfunction cloneDeep(val, instanceClone) {\n  switch (typeOf(val)) {\n    case 'object':\n      return cloneObjectDeep(val, instanceClone);\n    case 'array':\n      return cloneArrayDeep(val, instanceClone);\n    default: {\n      return clone(val);\n    }\n  }\n}\n\nfunction cloneObjectDeep(val, instanceClone) {\n  if (typeof instanceClone === 'function') {\n    return instanceClone(val);\n  }\n  if (instanceClone || isPlainObject(val)) {\n    const res = new val.constructor();\n    for (let key in val) {\n      res[key] = cloneDeep(val[key], instanceClone);\n    }\n    return res;\n  }\n  return val;\n}\n\nfunction cloneArrayDeep(val, instanceClone) {\n  const res = new val.constructor(val.length);\n  for (let i = 0; i < val.length; i++) {\n    res[i] = cloneDeep(val[i], instanceClone);\n  }\n  return res;\n}\n\n/**\n * Expose `cloneDeep`\n */\n\nmodule.exports = cloneDeep;\n","import nanoid from \"nanoid/non-secure\";\r\nimport cloneDeep from \"clone-deep\";\r\nimport { ISparkyProps, ISparkyState, ISparkyComponent, IRenderReturn } from \"./sparky\";\r\nimport { IFnCached } from \"./sparky.function\";\r\n\r\nexport interface ISparkySelf {\r\n    props: ISparkyProps;\r\n    state?: ISparkyState;\r\n    cachedMemo?: IFnCached[],\r\n    cachedUpdate?: IFnCached[],\r\n    cachedState?: any[]\r\n    indexes?: {\r\n        memo: number;\r\n        update: number;\r\n        state: number;\r\n        [x: string] : number;\r\n    },\r\n    __id?: string,\r\n    __root?: ISparkyComponent,\r\n    renderFunc: (props?: any) => IRenderReturn;\r\n}\r\n\r\nconst emptyContext: ISparkySelf = {\r\n    __root: null,\r\n    __id: \"\",\r\n    props: {},\r\n    state: {},\r\n    cachedMemo: [],\r\n    cachedUpdate: [],\r\n    cachedState: [],\r\n    indexes: {\r\n        memo: 0,\r\n        update: 0,\r\n        state: 0\r\n    },\r\n    renderFunc: null\r\n};\r\n\r\nexport class SparkyContext {\r\n    private static __context: ISparkySelf\r\n    private static __defaultContext : ISparkySelf = emptyContext\r\n\r\n    public static getCurrentContext() {\r\n        return this.__context;\r\n    }\r\n\r\n    public static setCurrentContext(newContext: ISparkySelf) {\r\n        this.__context = newContext;\r\n    }\r\n\r\n    public static resetIndexes() {\r\n        if(!this.__context) throw new ReferenceError(\"Try to reset index on a undefined context\");\r\n        this.__context.indexes.memo = 0;\r\n        this.__context.indexes.update = 0;\r\n        this.__context.indexes.state = 0;\r\n    }\r\n\r\n    public static newContext(newContext: ISparkySelf) : ISparkySelf {\r\n        return cloneDeep({...this.__defaultContext, ...newContext, __id: nanoid(12)});\r\n    }\r\n}","import { arrayAreSame } from \"./sparky.helper\";\r\nimport { IFnCached, ArgumentsList } from \"./sparky.function\";\r\nimport { ISparkySelf } from \"./sparky.context\";\r\n\r\ntype CachedType = \"memoize\" | \"update\";\r\n\r\nexport function callCachedFn(context: ISparkySelf, type: CachedType, cachedArray: IFnCached[], callbackFn: Function, argumentsChanged?: ArgumentsList) {\r\n    const fnCached = cachedArray[getIndexByType(context, type)];\r\n    incrementIndexByType(context, type)\r\n\r\n    const newMemo = {\r\n        fn: callbackFn,\r\n        result: null,\r\n        dependencies: argumentsChanged\r\n    };\r\n\r\n    if (!fnCached || !argumentsChanged) {\r\n        newMemo.result = callbackFn.call(window, argumentsChanged ? [...argumentsChanged] : null);\r\n        cachedArray.push(newMemo)\r\n        return newMemo.result;\r\n    }\r\n\r\n    if (!arrayAreSame(fnCached.dependencies, argumentsChanged)) {\r\n        fnCached.dependencies = argumentsChanged;\r\n        fnCached.result = callbackFn.call(window, ...argumentsChanged);\r\n        return fnCached.result;\r\n    }\r\n\r\n    return fnCached.result;\r\n}\r\n\r\nfunction getIndexByType(context: ISparkySelf, type: CachedType) {\r\n    if (type == \"memoize\")\r\n        return context.indexes.memo;\r\n    return context.indexes.update;\r\n}\r\nfunction incrementIndexByType(context: ISparkySelf, type: CachedType) {\r\n    if (type == \"memoize\")\r\n        return ++context.indexes.memo;\r\n    return ++context.indexes.update;\r\n}","interface ISortArray {\r\n    bigArray: any[];\r\n    smallArray: any[];\r\n}\r\n\r\nexport function arrayAreSame(array1: any[], array2: any[]) {\r\n    const { bigArray, smallArray } = sortArrayInObject(array1, array2);\r\n\r\n    return bigArray.every((big, i) => {\r\n        return big == (smallArray ? smallArray[i] : null);\r\n    })\r\n}\r\n\r\nfunction sortArrayInObject(array1: any[], array2: any[]): ISortArray {\r\n    const length_1 = array1.length;\r\n    const length_2 = array2.length;\r\n\r\n    if(length_1 > length_2) return { bigArray: array1, smallArray: array2 }\r\n\r\n    return { bigArray: array2, smallArray: array1 }\r\n}","window.requestIdleCallback =\n    window.requestIdleCallback ||\n    function(cb) {\n        var start = Date.now();\n        return setTimeout(function() {\n            cb({\n                didTimeout: false,\n                timeRemaining: function() {\n                    return Math.max(0, 50 - (Date.now() - start));\n                },\n            });\n        }, 1);\n    };\n\nwindow.cancelIdleCallback =\n    window.cancelIdleCallback ||\n    function(id) {\n        clearTimeout(id);\n    };\n","import { Sparky } from \"./sparky\";\r\nimport 'requestidlecallback-polyfill';\r\nimport { callCachedFn } from \"./sparky.function.helper\";\r\nimport { SparkyContext, ISparkySelf } from \"./sparky.context\";\r\n\r\nexport type ArgumentsList = any[];\r\ntype UpdateCallback = () => void;\r\ntype IBoundSetCurrentState = {\r\n    context: ISparkySelf;\r\n    state: number;\r\n};\r\n\r\nexport interface IFnCached {\r\n    fn: Function;\r\n    dependencies: string[];\r\n    result: any;\r\n}\r\n\r\n\r\nexport type ISetState<S> = (newState: S) => ISetState<S>;\r\n\r\nconst getContext = () => {\r\n    const currentContext = SparkyContext.getCurrentContext();\r\n    if (!currentContext)\r\n        throw new ReferenceError(\"Sparky Function only can be used in the lifecycle of a Sparky application\");\r\n    return currentContext;\r\n}\r\n\r\nconst setContext = (newContext: ISparkySelf) => {\r\n    SparkyContext.setCurrentContext(newContext);\r\n    SparkyContext.resetIndexes();\r\n}\r\n\r\nconst setCurrentState = function <S>(this: IBoundSetCurrentState, newState: S): ISetState<S> {\r\n    setContext(this.context);\r\n    const currentContext = getContext();\r\n    currentContext.indexes.state = this.state;\r\n    currentContext.cachedState[currentContext.indexes.state] = newState;\r\n    currentContext.indexes.state++;\r\n    if (currentContext.__root) {\r\n        SparkyContext.setCurrentContext(Sparky.mount({ \r\n            ...currentContext.__root, currentContext }));\r\n    } else {\r\n        SparkyContext.setCurrentContext(\r\n            Sparky.mount({ type: \"SparkyComponent\", \r\n            context: currentContext, currentContext, renderFn: currentContext.renderFunc }));\r\n    }\r\n    return setCurrentState;\r\n}\r\n\r\nconst setInitialState = <S>(newState: S): ISetState<S> => {\r\n    const currentContext = getContext();\r\n    currentContext.cachedState[currentContext.indexes.state] = newState;\r\n    return setCurrentState;\r\n}\r\n\r\nexport const Sparky__update = (callbackFn: UpdateCallback, dependenciesChanged?: ArgumentsList) => {\r\n    const currentContext = getContext();\r\n    window.requestIdleCallback(() => {\r\n        callCachedFn(currentContext, \"update\", currentContext.cachedUpdate, callbackFn, dependenciesChanged)\r\n    }, { timeout: 250 });\r\n}\r\n\r\nexport const Sparky__state = <S>(initialState: S): [S, ISetState<S>] => {\r\n    const currentContext = getContext();\r\n    const bound = { context: currentContext, state: currentContext.indexes.state }\r\n    const currentState = currentContext.cachedState[currentContext.indexes.state];\r\n    if(currentState) {\r\n        currentContext.indexes.state++;\r\n        const setState = setCurrentState;\r\n        return [currentState as S, setState.bind(bound)];\r\n    }\r\n    const setState = setInitialState(initialState);\r\n    currentContext.indexes.state++;\r\n    const lastIndex = currentContext.indexes.state - 1;\r\n    return [currentContext.cachedState[lastIndex] as S, setState.bind(bound)];\r\n}\r\n\r\nexport const Sparky__memoize = (callbackFn: Function, argumentsChanged?: ArgumentsList) => {\r\n    const currentContext = getContext();\r\n    callCachedFn(currentContext, \"memoize\", currentContext.cachedMemo, callbackFn, argumentsChanged)\r\n}","import nanoid from \"nanoid/non-secure\";\r\n\r\nimport 'mdn-polyfills/Array.from';\r\nimport 'mdn-polyfills/Array.prototype.find';\r\n\r\nimport { reconciliate, getCurrentDom, setCurrentDom } from \"./sparky.dom\";\r\nimport { EventManager } from \"./sparky.eventmanager\";\r\nimport { SparkyComponent } from \"./sparky.component\";\r\nimport { SparkyContext, ISparkySelf } from \"./sparky.context\";\r\n\r\nimport cloneDeep from \"clone-deep\";\r\n\r\nimport { isConnectedPolyfill } from \"./polyfill/isConnected\";\r\nimport { Sparky__state, Sparky__update, Sparky__memoize } from \"./sparky.function\";\r\n\r\nisConnectedPolyfill();\r\n\r\nexport interface IRenderReturn {\r\n    type: string;\r\n    html: string;\r\n    func: ISparkyEventFunc[],\r\n    nestedComponents: ISparkyComponent[];\r\n    children: IRenderReturn[];\r\n    renderId: string;\r\n}\r\n\r\nexport interface IReconciliateProps {\r\n    dom: HTMLElement,\r\n    func: ISparkyEventFunc[],\r\n}\r\n\r\nexport type ISelfFunction = (props?: any) => IRenderReturn;\r\n\r\nexport interface ISparkyEventFunc {\r\n    renderId: string;\r\n    index: number;\r\n    func: Function;\r\n}\r\n\r\nexport interface ISparkyComponent {\r\n    type: string;\r\n    context: ISparkySelf;\r\n    currentContext: ISparkySelf;\r\n    renderFn: ISelfFunction;\r\n}\r\n\r\nexport interface ISparkyProps {\r\n    [key: string]: any;\r\n}\r\n\r\nexport type ISparkyState = ISparkyProps;\r\n\r\nexport class Sparky {\r\n    public static _DEV_: boolean = true;\r\n\r\n    /**\r\n     * Generate a Sparky Component that can be mount.\r\n     * @param renderFunc The function that going to be execute to render html template\r\n     */\r\n    static component(renderFunc: ISelfFunction, props?: ISparkyProps) {\r\n        const sparkyContext = SparkyContext.newContext({ props, renderFunc });\r\n        return { type: \"SparkyComponent\", context: sparkyContext, currentContext: sparkyContext, renderFn: renderFunc } as ISparkyComponent;\r\n    }\r\n\r\n    /**\r\n     * Mount a Sparky Component in the DOM Tree and keep it updated.\r\n     * @param component Sparky Component\r\n     * @param dom The dom element where you want to mount this component\r\n     */\r\n    static mount(component: ISparkyComponent, dom?: HTMLElement): ISparkySelf {\r\n        if (Sparky._DEV_)\r\n            console.time();\r\n\r\n        const { context, renderFn } = component;\r\n\r\n        const keepIndexes = cloneDeep(component.currentContext.indexes);\r\n\r\n        SparkyContext.setCurrentContext(context);\r\n        SparkyContext.resetIndexes();\r\n\r\n        const render = renderFn(Object.freeze(context.props)) as IRenderReturn;\r\n\r\n        let nextDOM = renderToDOMNode(render.html);\r\n\r\n        nextDOM = SparkyComponent.populate(nextDOM, render, component);\r\n\r\n        let finalDOM = reconciliate(getCurrentDom(), nextDOM);\r\n        if (!finalDOM) return;\r\n        if (!finalDOM.isConnected && dom)\r\n            dom.appendChild(finalDOM);\r\n        EventManager.listen();\r\n\r\n        setCurrentDom(finalDOM as HTMLElement);\r\n\r\n        if (Sparky._DEV_)\r\n            console.timeEnd();\r\n        \r\n        return {...component.currentContext, indexes: keepIndexes};\r\n    }\r\n\r\n    /**\r\n     * Reconciliate the current DOM with the new DOM Node\r\n     * @param oldNode Node that need to be reconcile\r\n     * @param newNode Node that have the new elements\r\n     */\r\n    static reconciliate(oldNode: HTMLElement, newNode: HTMLElement) {\r\n        return reconciliate(oldNode, newNode)\r\n    }\r\n}\r\n\r\n/**\r\n * Function will be run after the render is commited to the screen.\r\n * @param callbackFn - The function to run\r\n * @param dependenciesChanged - Array of values that the function depends on\r\n */\r\nexport const update = Sparky__update;\r\n\r\n/**\r\n * Returns a stateful value, and a function to update it.\r\n * @param initialState The value during the first render\r\n */\r\nexport const state = Sparky__state;\r\n\r\n/**\r\n * Run and returns a memoized value\r\n * @param callbackFn - Function will be run on rendering phase\r\n * @param argumentsChanged - Array of values that the function depends on\r\n */\r\nexport const memoize = Sparky__memoize;\r\n\r\n/**\r\n * Render the html string template to HTML elements\r\n * @param html Array of HTML String \r\n * @param computedProps Computed Props used to pass Javascript into template\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\r\n */\r\nexport function render(html: TemplateStringsArray | string, ...computedProps: any[]): IRenderReturn {\r\n    const func: ISparkyEventFunc[] = [];\r\n    const nestedComponents: ISparkyComponent[] = [];\r\n    const children: IRenderReturn[] = [];\r\n    const renderId = nanoid(12);\r\n\r\n    const newHTML = (typeof html == \"string\") ? html\r\n        : html.map((stringHTML, i) => {\r\n            let htmlLine = \"\"\r\n            htmlLine += stringHTML\r\n            if (!computedProps[i]) return htmlLine;\r\n            htmlLine = getComputedValue(computedProps, i, func, htmlLine, nestedComponents, children, renderId);\r\n            return htmlLine;\r\n        })\r\n\r\n    const innerHTML = Array.isArray(newHTML) ? newHTML.join(\"\") : newHTML;\r\n\r\n    return { type: \"SparkyRender\", html: innerHTML, func, nestedComponents, children, renderId };\r\n}\r\n\r\nfunction getComputedValue(computedProps: any[], i: number, func: ISparkyEventFunc[], htmlLine: string, nestedComponents: ISparkyComponent[], children: IRenderReturn[], renderId: string) {\r\n    if (typeof computedProps[i] == \"function\") {\r\n        func.push({ index: func.length - 1, renderId, func: computedProps[i] });\r\n        htmlLine += `'SparkyFunction#${renderId}#${func.length - 1}'`;\r\n    }\r\n    else if (computedProps[i].type == \"SparkyRender\") {\r\n        const render = computedProps[i] as IRenderReturn;\r\n        htmlLine += render.html;\r\n        children.push(render)\r\n    }\r\n    else if (computedProps[i].type == \"SparkyComponent\") {\r\n        const comp = computedProps[i] as ISparkyComponent;\r\n        htmlLine += `<!-- SparkyComponent#${comp.renderFn.name}#${nestedComponents.length}#${renderId} -->`;\r\n        nestedComponents.push(comp);\r\n    }\r\n    else {\r\n\r\n        computedProps[i] = Array.isArray(computedProps[i]) ?\r\n            computedProps[i].join(\"\") : new String(computedProps[i]);\r\n        if ((computedProps[i] as string).startsWith(\"<\"))\r\n            htmlLine += computedProps[i];\r\n        else\r\n            htmlLine += `<span class='computed'>${computedProps[i]}</span>`;\r\n    }\r\n    return htmlLine;\r\n}\r\n\r\nexport function renderToDOMNode(html: string) {\r\n    const div = document.createElement(\"div\");\r\n    div.innerHTML = html;\r\n    if (div.children.length > 1) {\r\n        throw new TypeError(\"Adjacent elements on the root level are forbidden.\");\r\n    }\r\n    return div.firstElementChild as HTMLElement;\r\n}","String.prototype.startsWith||(String.prototype.startsWith=function(t,r){return r=r||0,this.substr(r,t.length)===t});\n","import { IRenderReturn, ISparkyComponent, renderToDOMNode } from \"./sparky\";\r\nimport { findEvent } from \"./sparky.event\";\r\nimport { EventManager, eventCallbackFn } from \"./sparky.eventmanager\";\r\nimport { SparkyContext } from \"./sparky.context\";\r\n\r\ninterface ICachedComponent {\r\n    component: ISparkyComponent,\r\n    dom: HTMLElement\r\n}\r\n\r\nexport class SparkyComponent {\r\n    private static cachedComponent: ICachedComponent[][] = [];\r\n    static populate(nextDOM: HTMLElement, render: IRenderReturn, rootComponent: ISparkyComponent) {\r\n        \r\n        const renderQueue: [IRenderReturn, ISparkyComponent, HTMLElement][] = [[render, rootComponent, nextDOM]];\r\n\r\n        let depthHorizontal = 0;\r\n\r\n        while (renderQueue.length > 0) {\r\n            const [currentRender, currentComponent, currentDOM] = renderQueue.shift();\r\n            if(!this.cachedComponent[depthHorizontal]) this.cachedComponent[depthHorizontal] = [];\r\n\r\n            currentRender.func.forEach((currentFunc, index) => {\r\n                const currentEvent = findEvent(currentDOM, currentRender.renderId, index);\r\n                const eventName = currentEvent.attr.name.replace(\"on\", \"\");\r\n                EventManager.addEvent({\r\n                    dom: currentEvent.dom,\r\n                    type: eventName,\r\n                    context: currentComponent.context,\r\n                    callbackFn: currentFunc.func as eventCallbackFn\r\n                })\r\n                currentEvent.dom.removeAttribute(currentEvent.attr.name)\r\n            })\r\n\r\n            currentRender.children.forEach((currentChild) => {\r\n                renderQueue.push([currentChild, currentComponent, currentDOM])\r\n            })\r\n\r\n            currentRender.nestedComponents.forEach((currentComp, index) => {\r\n                const cached = this.cachedComponent[depthHorizontal][index];\r\n                const commentDom = this.findComment(currentDOM, currentRender.renderId, index, currentComp.renderFn.name);\r\n                if(cached) {\r\n                    if(cached.component.renderFn.name == \"\") {\r\n                        if(cached.component.renderFn.toString() == currentComp.renderFn.toString()) {\r\n                            currentComp = getCachedComponent(cached, currentComp);\r\n                        }\r\n                    } else if(cached.component.renderFn.name == currentComp.renderFn.name){\r\n                        currentComp = getCachedComponent(cached, currentComp);\r\n                    }\r\n                }\r\n                SparkyContext.setCurrentContext(currentComp.context);\r\n                SparkyContext.resetIndexes();\r\n                const renderChild = currentComp.renderFn(Object.freeze(currentComp.context.props));\r\n                if(!commentDom) return;\r\n                const renderChildDOM = renderToDOMNode(renderChild.html);\r\n                commentDom.parentNode.replaceChild(renderChildDOM, commentDom);\r\n                currentComp.context.__root = rootComponent;\r\n                render.func.push(...renderChild.func);\r\n                renderQueue.push([renderChild, currentComp, renderChildDOM]);\r\n\r\n                this.cachedComponent[depthHorizontal][index] = {\r\n                    component: currentComp,\r\n                    dom: currentDOM\r\n                };\r\n            });\r\n            if(currentRender.nestedComponents.length > 0)\r\n                depthHorizontal++;\r\n        }\r\n\r\n        return nextDOM;\r\n    }\r\n\r\n    private static findComment(element: HTMLElement, renderId: string, i: number, componentName: string) {\r\n        const domQueue = [element];\r\n        while(domQueue.length > 0) {\r\n            const elem = domQueue.shift();\r\n            if(elem.nodeName == '#comment' && elem.nodeValue.trim() == `SparkyComponent#${componentName}#${i}#${renderId}`) {\r\n                return elem;\r\n            }\r\n\r\n            for(let i = 0; i < elem.childNodes.length; i++) {\r\n                domQueue.push(elem.childNodes[i] as HTMLElement);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction getCachedComponent(cached: ICachedComponent, currentComp: ISparkyComponent) {\r\n    cached.component.context.props = currentComp.context.props;\r\n    currentComp = cached.component;\r\n    return currentComp;\r\n}\r\n","import 'mdn-polyfills/String.prototype.startsWith';\r\n\r\ninterface IEventReturn {\r\n    dom: HTMLElement;\r\n    attr: Attr;\r\n}\r\n\r\nexport function findEvent(element: HTMLElement, renderId: string, index: number) : IEventReturn {\r\n    const domQueue = [element];\r\n    while(domQueue.length > 0) {\r\n        const elem = domQueue.shift();\r\n        const eventAttr = Array.from(elem.attributes).find((attr) => {\r\n            if(attr.name.startsWith(\"on\")) {\r\n                return attr.value == `SparkyFunction#${renderId}#${index}`;\r\n            }\r\n        })\r\n\r\n        if(eventAttr) return {dom: elem, attr: eventAttr};\r\n\r\n        for(let index = 0; index < elem.children.length; index++) {\r\n            domQueue.push(elem.children[index] as HTMLElement)\r\n        }\r\n    }\r\n}","import nanoid from \"nanoid/non-secure\";\r\n\r\nimport 'mdn-polyfills/Array.from';\r\nimport 'mdn-polyfills/Array.prototype.find';\r\n\r\nimport { reconciliate, getCurrentDom, setCurrentDom } from \"./sparky.dom\";\r\nimport { EventManager } from \"./sparky.eventmanager\";\r\nimport { SparkyComponent } from \"./sparky.component\";\r\nimport { SparkyContext, ISparkySelf } from \"./sparky.context\";\r\n\r\nimport cloneDeep from \"clone-deep\";\r\n\r\nimport { isConnectedPolyfill } from \"./polyfill/isConnected\";\r\nimport { Sparky__state, Sparky__update, Sparky__memoize } from \"./sparky.function\";\r\n\r\nisConnectedPolyfill();\r\n\r\nexport interface IRenderReturn {\r\n    type: string;\r\n    html: string;\r\n    func: ISparkyEventFunc[],\r\n    nestedComponents: ISparkyComponent[];\r\n    children: IRenderReturn[];\r\n    renderId: string;\r\n}\r\n\r\nexport interface IReconciliateProps {\r\n    dom: HTMLElement,\r\n    func: ISparkyEventFunc[],\r\n}\r\n\r\nexport type ISelfFunction = (props?: any) => IRenderReturn;\r\n\r\nexport interface ISparkyEventFunc {\r\n    renderId: string;\r\n    index: number;\r\n    func: Function;\r\n}\r\n\r\nexport interface ISparkyComponent {\r\n    type: string;\r\n    context: ISparkySelf;\r\n    currentContext: ISparkySelf;\r\n    renderFn: ISelfFunction;\r\n}\r\n\r\nexport interface ISparkyProps {\r\n    [key: string]: any;\r\n}\r\n\r\nexport type ISparkyState = ISparkyProps;\r\n\r\nexport class Sparky {\r\n    public static _DEV_: boolean = true;\r\n\r\n    /**\r\n     * Generate a Sparky Component that can be mount.\r\n     * @param renderFunc The function that going to be execute to render html template\r\n     */\r\n    static component(renderFunc: ISelfFunction, props?: ISparkyProps) {\r\n        const sparkyContext = SparkyContext.newContext({ props, renderFunc });\r\n        return { type: \"SparkyComponent\", context: sparkyContext, currentContext: sparkyContext, renderFn: renderFunc } as ISparkyComponent;\r\n    }\r\n\r\n    /**\r\n     * Mount a Sparky Component in the DOM Tree and keep it updated.\r\n     * @param component Sparky Component\r\n     * @param dom The dom element where you want to mount this component\r\n     */\r\n    static mount(component: ISparkyComponent, dom?: HTMLElement): ISparkySelf {\r\n        if (Sparky._DEV_)\r\n            console.time();\r\n\r\n        const { context, renderFn } = component;\r\n\r\n        const keepIndexes = cloneDeep(component.currentContext.indexes);\r\n\r\n        SparkyContext.setCurrentContext(context);\r\n        SparkyContext.resetIndexes();\r\n\r\n        const render = renderFn(Object.freeze(context.props)) as IRenderReturn;\r\n\r\n        let nextDOM = renderToDOMNode(render.html);\r\n\r\n        nextDOM = SparkyComponent.populate(nextDOM, render, component);\r\n\r\n        let finalDOM = reconciliate(getCurrentDom(), nextDOM);\r\n        if (!finalDOM) return;\r\n        if (!finalDOM.isConnected && dom)\r\n            dom.appendChild(finalDOM);\r\n        EventManager.listen();\r\n\r\n        setCurrentDom(finalDOM as HTMLElement);\r\n\r\n        if (Sparky._DEV_)\r\n            console.timeEnd();\r\n        \r\n        return {...component.currentContext, indexes: keepIndexes};\r\n    }\r\n\r\n    /**\r\n     * Reconciliate the current DOM with the new DOM Node\r\n     * @param oldNode Node that need to be reconcile\r\n     * @param newNode Node that have the new elements\r\n     */\r\n    static reconciliate(oldNode: HTMLElement, newNode: HTMLElement) {\r\n        return reconciliate(oldNode, newNode)\r\n    }\r\n}\r\n\r\n/**\r\n * Function will be run after the render is commited to the screen.\r\n * @param callbackFn - The function to run\r\n * @param dependenciesChanged - Array of values that the function depends on\r\n */\r\nexport const update = Sparky__update;\r\n\r\n/**\r\n * Returns a stateful value, and a function to update it.\r\n * @param initialState The value during the first render\r\n */\r\nexport const state = Sparky__state;\r\n\r\n/**\r\n * Run and returns a memoized value\r\n * @param callbackFn - Function will be run on rendering phase\r\n * @param argumentsChanged - Array of values that the function depends on\r\n */\r\nexport const memoize = Sparky__memoize;\r\n\r\n/**\r\n * Render the html string template to HTML elements\r\n * @param html Array of HTML String \r\n * @param computedProps Computed Props used to pass Javascript into template\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\r\n */\r\nexport function render(html: TemplateStringsArray | string, ...computedProps: any[]): IRenderReturn {\r\n    const func: ISparkyEventFunc[] = [];\r\n    const nestedComponents: ISparkyComponent[] = [];\r\n    const children: IRenderReturn[] = [];\r\n    const renderId = nanoid(12);\r\n\r\n    const newHTML = (typeof html == \"string\") ? html\r\n        : html.map((stringHTML, i) => {\r\n            let htmlLine = \"\"\r\n            htmlLine += stringHTML\r\n            if (!computedProps[i]) return htmlLine;\r\n            htmlLine = getComputedValue(computedProps, i, func, htmlLine, nestedComponents, children, renderId);\r\n            return htmlLine;\r\n        })\r\n\r\n    const innerHTML = Array.isArray(newHTML) ? newHTML.join(\"\") : newHTML;\r\n\r\n    return { type: \"SparkyRender\", html: innerHTML, func, nestedComponents, children, renderId };\r\n}\r\n\r\nfunction getComputedValue(computedProps: any[], i: number, func: ISparkyEventFunc[], htmlLine: string, nestedComponents: ISparkyComponent[], children: IRenderReturn[], renderId: string) {\r\n    if (typeof computedProps[i] == \"function\") {\r\n        func.push({ index: func.length - 1, renderId, func: computedProps[i] });\r\n        htmlLine += `'SparkyFunction#${renderId}#${func.length - 1}'`;\r\n    }\r\n    else if (computedProps[i].type == \"SparkyRender\") {\r\n        const render = computedProps[i] as IRenderReturn;\r\n        htmlLine += render.html;\r\n        children.push(render)\r\n    }\r\n    else if (computedProps[i].type == \"SparkyComponent\") {\r\n        const comp = computedProps[i] as ISparkyComponent;\r\n        htmlLine += `<!-- SparkyComponent#${comp.renderFn.name}#${nestedComponents.length}#${renderId} -->`;\r\n        nestedComponents.push(comp);\r\n    }\r\n    else {\r\n\r\n        computedProps[i] = Array.isArray(computedProps[i]) ?\r\n            computedProps[i].join(\"\") : new String(computedProps[i]);\r\n        if ((computedProps[i] as string).startsWith(\"<\"))\r\n            htmlLine += computedProps[i];\r\n        else\r\n            htmlLine += `<span class='computed'>${computedProps[i]}</span>`;\r\n    }\r\n    return htmlLine;\r\n}\r\n\r\nexport function renderToDOMNode(html: string) {\r\n    const div = document.createElement(\"div\");\r\n    div.innerHTML = html;\r\n    if (div.children.length > 1) {\r\n        throw new TypeError(\"Adjacent elements on the root level are forbidden.\");\r\n    }\r\n    return div.firstElementChild as HTMLElement;\r\n}"],"names":["url","i","toString","toUpperCase","t","u","e","c","size","id","Math","random","Array","from","Object","prototype","r","call","pow","n","Number","isNaN","isFinite","floor","abs","min","max","TypeError","arguments","length","o","a","this","f","find","currentDom","getCurrentDom","setCurrentDom","dom","reconciliate","nextDom","isEqualNode","nodeName","domQueue","_a","currentElem","nextElem","removedList","attributes","sortedCurrentAttributes","sort","attr","attr2","attributeSort","sortedNextAttributes","removedAttr","forEach","nextAttr","name","push","setAttribute","value","removeAttribute","reconciliateAttribute","nextElemChildren","childNodes","node","nextNode","item","textContent","replaceChild","cloneNode","childNode","appendChild","rmElem","removeChild","b","isConnectedPolyfill","Node","defineProperty","get","ownerDocument","compareDocumentPosition","DOCUMENT_POSITION_DISCONNECTED","EventManager","removeUnusedEvents","eventList","event","type","_this","isEventTypeListening","document","addEventListener","dispatchEvent","eventListType","evtList","isEventTarget","callbackFn","eventSingle","context","filter","evt","isConnected","target","contains","val","ctorName","isArray","constructor","isBuffer","callee","err","message","indexOf","isArguments","Date","toDateString","getDate","setDate","isDate","Error","stackTraceLimit","isError","RegExp","flags","ignoreCase","multiline","global","isRegexp","throw","return","next","isGeneratorObj","slice","toLowerCase","replace","isObjectObject","valueOf","Symbol","deep","typeOf","assign","Map","Set","len","buf","Buffer","allocUnsafe","copy","cloneBuffer","cloneSymbol","res","byteLength","Uint8Array","set","cloneArrayBuffer","buffer","byteOffset","cloneTypedArray","exec","re","source","lastIndex","cloneRegExp","create","cloneDeep","instanceClone","ctor","prot","hasOwnProperty","key","cloneObjectDeep","cloneArrayDeep","clone","emptyContext","__root","__id","props","state","cachedMemo","cachedUpdate","cachedState","indexes","memo","update","renderFunc","SparkyContext","__context","newContext","ReferenceError","__defaultContext","nanoid","callCachedFn","cachedArray","argumentsChanged","fnCached","getIndexByType","incrementIndexByType","array1","bigArray","smallArray","newMemo","fn","result","dependencies","array2","length_1","length_2","every","big","window","requestIdleCallback","cb","start","now","setTimeout","didTimeout","timeRemaining","cancelIdleCallback","clearTimeout","getContext","currentContext","getCurrentContext","setCurrentState","newState","setCurrentContext","resetIndexes","Sparky","mount","renderFn","sparkyContext","component","_DEV_","console","time","keepIndexes","render","freeze","nextDOM","renderToDOMNode","html","SparkyComponent","populate","finalDOM","listen","timeEnd","oldNode","newNode","div","createElement","innerHTML","children","firstElementChild","String","startsWith","substr","rootComponent","renderQueue","depthHorizontal","currentRender","currentComponent","currentDOM","this_1","cachedComponent","func","currentFunc","index","currentEvent","element","renderId","elem","shift","eventAttr","index_1","findEvent","eventName","addEvent","currentChild","nestedComponents","currentComp","cached","commentDom","findComment","getCachedComponent","renderChild","renderChildDOM","parentNode","componentName","nodeValue","trim","i_1","dependenciesChanged","timeout","initialState","bound","currentState","bind","setState","setInitialState","memoize","getComputedValue","computedProps","htmlLine","render_1","comp","join","_i","newHTML","map","stringHTML"],"mappings":"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"}